"""Create task table

Revision ID: 457528d27220
Revises:
Create Date: 2025-07-13 13:12:16.225271

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "457528d27220"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

role = sa.Enum("executor", "watcher", name="role", schema="task_schema")
status = sa.Enum("todo", "in_progress", "done", name="status", schema="task_schema")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS task_schema")
    op.create_table(
        "board",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="task_schema",
    )
    op.create_table(
        "group",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="task_schema",
    )
    op.create_table(
        "sprint",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="task_schema",
    )
    op.create_table(
        "column",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("board_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["board_id"], ["task_schema.board.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="task_schema",
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            status,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("author_id", sa.Uuid(), nullable=False),
        sa.Column("assignee_id", sa.Uuid(), nullable=True),
        sa.Column("column_id", sa.Uuid(), nullable=True),
        sa.Column("sprint_id", sa.Uuid(), nullable=True),
        sa.Column("board_id", sa.Uuid(), nullable=True),
        sa.Column("group_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["board_id"], ["task_schema.board.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["column_id"], ["task_schema.column.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["group_id"], ["task_schema.group.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["sprint_id"], ["task_schema.sprint.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="task_schema",
    )
    op.create_index(
        op.f("ix_task_schema_task_created_at"),
        "task",
        ["created_at"],
        unique=False,
        schema="task_schema",
    )
    op.create_table(
        "task_participant",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("task_id", sa.Uuid(), nullable=False),
        sa.Column(
            "role", role, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_id"], ["task_schema.task.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "user_id", "task_id"),
        schema="task_schema",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_participant", schema="task_schema")
    op.drop_index(
        op.f("ix_task_schema_task_created_at"),
        table_name="task",
        schema="task_schema",
    )
    op.drop_table("task", schema="task_schema")
    op.drop_table("column", schema="task_schema")
    op.drop_table("sprint", schema="task_schema")
    op.drop_table("group", schema="task_schema")
    op.drop_table("board", schema="task_schema")
    role.drop(op.get_bind())
    status.drop(op.get_bind())
    # ### end Alembic commands ###
